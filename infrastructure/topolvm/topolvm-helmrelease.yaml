apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: topolvm
spec:
  chart:
    spec:
      chart: topolvm
      sourceRef:
        kind: HelmRepository
        name: topolvm
      version: "15.5.6"
  interval: 1h0m0s
  values:
    lvmd:
      managed: true
      deviceClasses:
        - name: nvme
          volume-group: topolvm
          default: true
          type: thin
          spare-gb: 1
          thin-pool:
            name: "pool0"
            overprovision-ratio: 5.0
      initContainers:
        - name: lvm-init
          image: ubuntu:24.04
          securityContext:
            privileged: true
          command:
            - /bin/bash
            - -c
          args:
            - |
              set -euo pipefail

              DEVICE=/dev/sdb
              VG_NAME=topolvm
              THIN_POOL_NAME=pool0
              THIN_POOL_SIZE=4G

              sleep infinity

              echo "Waiting for $DEVICE..."
              while [ ! -b "$DEVICE" ]; do sleep 1; done

              if ! /sbin/pvs "$DEVICE" >/dev/null 2>&1; then
                echo "Creating physical volume on $DEVICE"
                /sbin/pvcreate "$DEVICE"
              else
                echo "Physical volume already exists on $DEVICE"
              fi
              /sbin/pvdisplay "$DEVICE"

              if ! /sbin/vgs "$VG_NAME" >/dev/null 2>&1; then
                echo "Creating volume group $VG_NAME"
                /sbin/vgcreate "$VG_NAME" "$DEVICE"
              else
                echo "Volume group $VG_NAME already exists"
              fi
              /sbin/vgdisplay "$VG_NAME"

              # echo "Activating volume group $VG_NAME"
              # /sbin/vgchange -a y "$VG_NAME"
              # /sbin/vgmknodes "$VG_NAME"
              # /sbin/lvcreate -V 1G --thin -n thin_volume vg1/tpool
              sleep infinity

              if ! /sbin/lvs "$VG_NAME/$THIN_POOL_NAME" >/dev/null 2>&1; then
                echo "Creating thin pool $THIN_POOL_NAME in $VG_NAME"
                /sbin/lvcreate -T -n "$THIN_POOL_NAME" -L "$THIN_POOL_SIZE" "$VG_NAME"
              else
                echo "Thin pool $THIN_POOL_NAME already exists in $VG_NAME"
              fi
              /sbin/lvdisplay "$VG_NAME/$THIN_POOL_NAME"

              echo "LVM init complete"
          volumeMounts:
          - name: devices-dir 
            mountPath: /dev
          - name: lvm-bin
            mountPath: /sbin
          # - name: lvm-conf
          #   mountPath: /etc/lvm
      additionalVolumes:
        - name: lvm-bin
          hostPath:
            path: /sbin
        # - name: lvm-conf
        #   hostPath:
        #     path: /etc/lvm
        #     type: Directory
      tolerations:
        - effect: NoSchedule
          key: node.mmontes.io/type
          value: compute-large
        - effect: NoSchedule
          key: node.mmontes.io/type
          value: compute-xlarge
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.mmontes.io/type
                    operator: In
                    values:
                      - compute-large
                      - compute-xlarge
      metrics:
        enabled: true
      prometheus:
        podMonitor:
          enabled: true
    node:
      lvmdEmbedded: false
      tolerations:
        - effect: NoSchedule
          key: node.mmontes.io/type
          value: compute-large
        - effect: NoSchedule
          key: node.mmontes.io/type
          value: compute-xlarge
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.mmontes.io/type
                    operator: In
                    values:
                      - compute-large
                      - compute-xlarge
      metrics:
        enabled: true
      prometheus:
        podMonitor:
          enabled: true
    controller:
      # TODO: bump to 2 replicas when homelab-v2 fully migrated
      replicaCount: 1
      prometheus:
        podMonitor:
          enabled: true
    storageClasses:
      - name: topolvm
        storageClass:
          fsType: xfs
          reclaimPolicy: Delete
          isDefaultClass: false
          volumeBindingMode: WaitForFirstConsumer
          allowVolumeExpansion: true
          additionalParameters:
            topolvm.io/device-class: "nvme"
    snapshot:
      enabled: true